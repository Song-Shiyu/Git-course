# Matrix form of the nine-ninth multiplication table
# # 默认的初始化矩阵的函数
# ############################
#def __init__(self):
#    self.matrix=[]

class Array:
    def __init__(self):
        self.array=[]
    def AddValue(self,value):
        if isinstance(value,int):
            self.array.append(value)
        elif isinstance(value,list):
            self.array.extend(value)
        else:
            print("只支持整型，或者整型列表")



class Matrix:
    def __init__(self,hsize,vsize):
        self.h=hsize #行数
        self.v=vsize #列数
        self.mat = [[None for i in range(0,hsize)]for j in range(0,vsize)]
    def Setvalue(self,value,i,j):
        self.mat[i][j]=value
    def Traverse(self):
        for i in range(0, self.h):
            for j in range(0, self.v):
                if self.mat[i][j] is not None:
                    print('%d*%d = %2d'%(i+1,j+1,self.mat[i][j]),end =" ")
            print()


value = [1,2,3,4,5,6,7,8,9]
hArr = Array()
vArr = Array()
hArr.AddValue(value)
vArr.AddValue(value)
matrix = Matrix(9,9)
for i in range(0,9):
    for j in range(0,9):
        if i>=j:
            matrix.Setvalue(hArr.array[i]*vArr.array[j],i,j)
matrix.Traverse()
